<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My personal website</title>
    <link>/post/</link>
    <description>Recent content in Posts on My personal website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Grepl and gsub</title>
      <link>/2020/09/01/grepl/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/01/grepl/</guid>
      <description>In this blog post I’d like to talk about the grep and grepl function, both found in base R (i.e. you don’t have to install a package for it) and both of which are extremely useful for pattern matching and replacement. When it comes to replacement, I will also discuss the sub() and gsub() functions. The main difference between the two grepl functions, is that the grepl() function returns a logical vector indicating which element of a character vector contains the match , whereas grep() returns the index.</description>
    </item>
    
    <item>
      <title>Testing different styles</title>
      <link>/2020/08/31/testing-different-styles/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/31/testing-different-styles/</guid>
      <description>Trying to get the picture below to be above the navigation bar!{{ partial &#34;header.html&#34; . }} { }Heading level 1This is a paragraph.Heading level 2And this is another paragraph. I wrote this is in the .Rmd file, not directly in the .html file! Writing it directly in the .Rmd file allows you to see it in the &#34;Viewer&#34; when you serve_site(), if you make the changes in the .</description>
    </item>
    
    <item>
      <title>Funky package - lubridate</title>
      <link>/2020/08/24/funky-package-lubridate/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/24/funky-package-lubridate/</guid>
      <description>Hi everyone, the second package I figured useful to discuss is the lubridate package. We’ve all had those data sets where the time or date needs to be formatted, and they always end up being a massive head-ache (… or is just me?). The lubridate package is part of the tidyverse universe, and makes it relatively easy to format dates, years, time and timezones to a specific standard. The vignette for the package can be found here.</description>
    </item>
    
    <item>
      <title>Janitor package</title>
      <link>/2020/08/24/janitor-package/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/24/janitor-package/</guid>
      <description>library(dplyr)library(janitor)Hello all! I figured it could be beneficial to explore various packages that are potentially useful in examining and tidying data. Given that I am still very much a novice when it comes to R, it would be great to understand how R can assist in data wrangling. I would much appreciate feedback and suggestions of other packages that can be useful for this purpose.
Janitor packageThe first package I’d like to explore and discuss is the janitor package.</description>
    </item>
    
    <item>
      <title>The joys of joining</title>
      <link>/2020/08/21/the-joys-of-joining/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/21/the-joys-of-joining/</guid>
      <description>The joys of mergingI am almost afraid to admit that for the longest time I have been struggling with what seems like one of the more basic components of R and data wrangling: merging/joining or binding rows/columns of multiple dataframes. Especially recently, when I had to compare and QC eventDates and times between two datasets was I struggling, and I feel like it took me longer than expected – and this was not the first time this happened.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/2015/07/23/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/2015/07/23/hello-r-markdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>